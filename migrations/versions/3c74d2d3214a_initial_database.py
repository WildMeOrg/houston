"""Initial Database Migration

Revision ID: 3c74d2d3214a
Revises: None
Create Date: 2021-04-27 12:38:21.490885

"""

# revision identifiers, used by Alembic.
revision = '3c74d2d3214a_initial_database'
down_revision = None

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

import app
import app.extensions



def upgrade():
    """
    Upgrade Semantic Description:
        ENTER DESCRIPTION HERE
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collaboration',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_collaboration'))
    )
    op.create_table('file_upload',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_file_upload'))
    )
    with op.batch_alter_table('file_upload', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_upload_mime_type'), ['mime_type'], unique=False)

    op.create_table('houston_config',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_houston_config')),
    sa.UniqueConstraint('key', name=op.f('uq_houston_config_key'))
    )
    op.create_table('individual',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_individual'))
    )
    op.create_table('sighting',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_sighting'))
    )
    op.create_table('site_setting',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('file_upload_guid', app.extensions.GUID(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['file_upload_guid'], ['file_upload.guid'], name=op.f('fk_site_setting_file_upload_guid_file_upload'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('key', name=op.f('pk_site_setting'))
    )
    op.create_table('user',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(max_length=128), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('website', sa.String(length=120), nullable=True),
    sa.Column('location', sa.String(length=120), nullable=True),
    sa.Column('affiliation', sa.String(length=120), nullable=True),
    sa.Column('forum_id', sa.String(length=120), nullable=True),
    sa.Column('locale', sa.String(length=20), nullable=True),
    sa.Column('accepted_user_agreement', sa.Boolean(), nullable=False),
    sa.Column('use_usa_date_format', sa.Boolean(), nullable=False),
    sa.Column('show_email_in_profile', sa.Boolean(), nullable=False),
    sa.Column('receive_notification_emails', sa.Boolean(), nullable=False),
    sa.Column('receive_newsletter_emails', sa.Boolean(), nullable=False),
    sa.Column('shares_data', sa.Boolean(), nullable=False),
    sa.Column('default_identification_catalogue', app.extensions.GUID(), nullable=True),
    sa.Column('profile_fileupload_guid', app.extensions.GUID(), nullable=True),
    sa.Column('static_roles', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_fileupload_guid'], ['file_upload.guid'], name=op.f('fk_user_profile_fileupload_guid_file_upload')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('asset_group',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('major_type', sa.Enum('filesystem', 'archive', 'service', 'test', 'unknown', 'error', 'reject', name='assetgroupmajortype'), nullable=False),
    sa.Column('commit', sa.String(length=40), nullable=True),
    sa.Column('commit_mime_whitelist_guid', app.extensions.GUID(), nullable=True),
    sa.Column('commit_houston_api_version', sa.String(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('owner_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_guid'], ['user.guid'], name=op.f('fk_asset_group_owner_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_asset_group')),
    sa.UniqueConstraint('commit', name=op.f('uq_asset_group_commit'))
    )
    with op.batch_alter_table('asset_group', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_asset_group_commit_houston_api_version'), ['commit_houston_api_version'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_group_commit_mime_whitelist_guid'), ['commit_mime_whitelist_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_group_major_type'), ['major_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_group_owner_guid'), ['owner_guid'], unique=False)

    op.create_table('code',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.Column('code_type', sa.Enum('invite', 'email', 'recover', 'onetime', name='codetypes'), nullable=False),
    sa.Column('accept_code', sa.String(length=64), nullable=False),
    sa.Column('reject_code', sa.String(length=64), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('response', sa.DateTime(), nullable=True),
    sa.Column('decision', sa.Enum('unknown', 'error', 'expired', 'dismiss', 'reject', 'accept', 'override', name='codedecisions'), nullable=True),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_code_user_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_code'))
    )
    with op.batch_alter_table('code', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_code_accept_code'), ['accept_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_code_code_type'), ['code_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_code_reject_code'), ['reject_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_code_user_guid'), ['user_guid'], unique=False)

    op.create_table('collaboration_user_associations',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('collaboration_guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.Column('initiator', sa.Boolean(), nullable=False),
    sa.Column('read_approval_state', sa.String(length=32), nullable=False),
    sa.Column('edit_approval_state', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['collaboration_guid'], ['collaboration.guid'], name=op.f('fk_collaboration_user_associations_collaboration_guid_collaboration')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_collaboration_user_associations_user_guid_user')),
    sa.PrimaryKeyConstraint('collaboration_guid', 'user_guid', name=op.f('pk_collaboration_user_associations'))
    )
    op.create_table('encounter',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('sighting_guid', app.extensions.GUID(), nullable=True),
    sa.Column('individual_guid', app.extensions.GUID(), nullable=True),
    sa.Column('owner_guid', app.extensions.GUID(), nullable=False),
    sa.Column('submitter_guid', app.extensions.GUID(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['individual_guid'], ['individual.guid'], name=op.f('fk_encounter_individual_guid_individual')),
    sa.ForeignKeyConstraint(['owner_guid'], ['user.guid'], name=op.f('fk_encounter_owner_guid_user')),
    sa.ForeignKeyConstraint(['sighting_guid'], ['sighting.guid'], name=op.f('fk_encounter_sighting_guid_sighting')),
    sa.ForeignKeyConstraint(['submitter_guid'], ['user.guid'], name=op.f('fk_encounter_submitter_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_encounter'))
    )
    with op.batch_alter_table('encounter', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_encounter_individual_guid'), ['individual_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_encounter_owner_guid'), ['owner_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_encounter_sighting_guid'), ['sighting_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_encounter_submitter_guid'), ['submitter_guid'], unique=False)

    op.create_table('notification',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('message_template', sa.String(), nullable=False),
    sa.Column('message_values', sa.JSON(), nullable=True),
    sa.Column('recipient_guid', app.extensions.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_guid'], ['user.guid'], name=op.f('fk_notification_recipient_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_notification'))
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_recipient_guid'), ['recipient_guid'], unique=False)

    op.create_table('oauth2_client',
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('secret', sa.String(length=64), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.Column('level', sa.Enum('public', 'session', 'confidential', name='clientlevels'), nullable=False),
    sa.Column('redirect_uris', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.Column('default_scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_oauth2_client_user_guid_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_oauth2_client'))
    )
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth2_client_user_guid'), ['user_guid'], unique=False)

    op.create_table('organization',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('logo_guid', app.extensions.GUID(), nullable=True),
    sa.Column('logo_url', sa.String(length=200), nullable=True),
    sa.Column('website', sa.String(length=120), nullable=True),
    sa.Column('owner_guid', app.extensions.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['owner_guid'], ['user.guid'], name=op.f('fk_organization_owner_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_organization'))
    )
    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organization_owner_guid'), ['owner_guid'], unique=False)

    op.create_table('project',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('owner_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_guid'], ['user.guid'], name=op.f('fk_project_owner_guid_user')),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_project'))
    )
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_owner_guid'), ['owner_guid'], unique=False)

    op.create_table('asset',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('extension', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('magic_signature', sa.String(), nullable=False),
    sa.Column('size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('filesystem_xxhash64', sa.String(), nullable=False),
    sa.Column('filesystem_guid', app.extensions.GUID(), nullable=False),
    sa.Column('semantic_guid', app.extensions.GUID(), nullable=False),
    sa.Column('content_guid', app.extensions.GUID(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('asset_group_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_group_guid'], ['asset_group.guid'], name=op.f('fk_asset_asset_group_guid_asset_group'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_asset')),
    sa.UniqueConstraint('semantic_guid', name=op.f('uq_asset_semantic_guid'))
    )
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_asset_asset_group_guid'), ['asset_group_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_extension'), ['extension'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_mime_type'), ['mime_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_path'), ['path'], unique=False)

    op.create_table('oauth2_grant',
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.Column('client_guid', app.extensions.GUID(), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=False),
    sa.Column('redirect_uri', sa.String(length=255), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['client_guid'], ['oauth2_client.guid'], name=op.f('fk_oauth2_grant_client_guid_oauth2_client')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_oauth2_grant_user_guid_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_oauth2_grant'))
    )
    with op.batch_alter_table('oauth2_grant', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth2_grant_client_guid'), ['client_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_oauth2_grant_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_oauth2_grant_user_guid'), ['user_guid'], unique=False)

    op.create_table('oauth2_token',
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('client_guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.Column('token_type', sa.Enum('Bearer', name='tokentypes'), nullable=False),
    sa.Column('access_token', sa.String(length=128), nullable=False),
    sa.Column('refresh_token', sa.String(length=128), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['client_guid'], ['oauth2_client.guid'], name=op.f('fk_oauth2_token_client_guid_oauth2_client')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_oauth2_token_user_guid_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_oauth2_token')),
    sa.UniqueConstraint('access_token', name=op.f('uq_oauth2_token_access_token')),
    sa.UniqueConstraint('refresh_token', name=op.f('uq_oauth2_token_refresh_token'))
    )
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth2_token_client_guid'), ['client_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_oauth2_token_user_guid'), ['user_guid'], unique=False)

    op.create_table('organization_user_membership_enrollment',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('organization_guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_guid'], ['organization.guid'], name=op.f('fk_organization_user_membership_enrollment_organization_guid_organization')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_organization_user_membership_enrollment_user_guid_user')),
    sa.PrimaryKeyConstraint('organization_guid', 'user_guid', name=op.f('pk_organization_user_membership_enrollment'))
    )
    op.create_table('organization_user_moderator_enrollment',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('organization_guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_guid'], ['organization.guid'], name=op.f('fk_organization_user_moderator_enrollment_organization_guid_organization')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_organization_user_moderator_enrollment_user_guid_user')),
    sa.PrimaryKeyConstraint('organization_guid', 'user_guid', name=op.f('pk_organization_user_moderator_enrollment'))
    )
    op.create_table('project_encounter',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('project_guid', app.extensions.GUID(), nullable=False),
    sa.Column('encounter_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['encounter_guid'], ['encounter.guid'], name=op.f('fk_project_encounter_encounter_guid_encounter')),
    sa.ForeignKeyConstraint(['project_guid'], ['project.guid'], name=op.f('fk_project_encounter_project_guid_project')),
    sa.PrimaryKeyConstraint('project_guid', 'encounter_guid', name=op.f('pk_project_encounter'))
    )
    op.create_table('project_user_membership_enrollment',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('project_guid', app.extensions.GUID(), nullable=False),
    sa.Column('user_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_guid'], ['project.guid'], name=op.f('fk_project_user_membership_enrollment_project_guid_project')),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], name=op.f('fk_project_user_membership_enrollment_user_guid_user')),
    sa.PrimaryKeyConstraint('project_guid', 'user_guid', name=op.f('pk_project_user_membership_enrollment'))
    )
    op.create_table('annotation',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('guid', app.extensions.GUID(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('asset_guid', app.extensions.GUID(), nullable=False),
    sa.Column('encounter_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_guid'], ['asset.guid'], name=op.f('fk_annotation_asset_guid_asset'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['encounter_guid'], ['encounter.guid'], name=op.f('fk_annotation_encounter_guid_encounter'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guid', name=op.f('pk_annotation'))
    )
    with op.batch_alter_table('annotation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_annotation_asset_guid'), ['asset_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_annotation_encounter_guid'), ['encounter_guid'], unique=False)

    op.create_table('sighting_assets',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('viewed', sa.DateTime(), nullable=False),
    sa.Column('sighting_guid', app.extensions.GUID(), nullable=False),
    sa.Column('asset_guid', app.extensions.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_guid'], ['asset.guid'], name=op.f('fk_sighting_assets_asset_guid_asset')),
    sa.ForeignKeyConstraint(['sighting_guid'], ['sighting.guid'], name=op.f('fk_sighting_assets_sighting_guid_sighting')),
    sa.PrimaryKeyConstraint('sighting_guid', 'asset_guid', name=op.f('pk_sighting_assets'))
    )
    # ### end Alembic commands ###


def downgrade():
    """
    Downgrade Semantic Description:
        ENTER DESCRIPTION HERE
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sighting_assets')
    with op.batch_alter_table('annotation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_annotation_encounter_guid'))
        batch_op.drop_index(batch_op.f('ix_annotation_asset_guid'))

    op.drop_table('annotation')
    op.drop_table('project_user_membership_enrollment')
    op.drop_table('project_encounter')
    op.drop_table('organization_user_moderator_enrollment')
    op.drop_table('organization_user_membership_enrollment')
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth2_token_user_guid'))
        batch_op.drop_index(batch_op.f('ix_oauth2_token_client_guid'))

    op.drop_table('oauth2_token')
    with op.batch_alter_table('oauth2_grant', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth2_grant_user_guid'))
        batch_op.drop_index(batch_op.f('ix_oauth2_grant_code'))
        batch_op.drop_index(batch_op.f('ix_oauth2_grant_client_guid'))

    op.drop_table('oauth2_grant')
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_asset_path'))
        batch_op.drop_index(batch_op.f('ix_asset_mime_type'))
        batch_op.drop_index(batch_op.f('ix_asset_extension'))
        batch_op.drop_index(batch_op.f('ix_asset_asset_group_guid'))

    op.drop_table('asset')
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_owner_guid'))

    op.drop_table('project')
    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organization_owner_guid'))

    op.drop_table('organization')
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth2_client_user_guid'))

    op.drop_table('oauth2_client')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_recipient_guid'))

    op.drop_table('notification')
    with op.batch_alter_table('encounter', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_encounter_submitter_guid'))
        batch_op.drop_index(batch_op.f('ix_encounter_sighting_guid'))
        batch_op.drop_index(batch_op.f('ix_encounter_owner_guid'))
        batch_op.drop_index(batch_op.f('ix_encounter_individual_guid'))

    op.drop_table('encounter')
    op.drop_table('collaboration_user_associations')
    with op.batch_alter_table('code', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_code_user_guid'))
        batch_op.drop_index(batch_op.f('ix_code_reject_code'))
        batch_op.drop_index(batch_op.f('ix_code_code_type'))
        batch_op.drop_index(batch_op.f('ix_code_accept_code'))

    op.drop_table('code')
    with op.batch_alter_table('asset_group', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_asset_group_owner_guid'))
        batch_op.drop_index(batch_op.f('ix_asset_group_major_type'))
        batch_op.drop_index(batch_op.f('ix_asset_group_commit_mime_whitelist_guid'))
        batch_op.drop_index(batch_op.f('ix_asset_group_commit_houston_api_version'))

    op.drop_table('asset_group')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('site_setting')
    op.drop_table('sighting')
    op.drop_table('individual')
    op.drop_table('houston_config')
    with op.batch_alter_table('file_upload', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_upload_mime_type'))

    op.drop_table('file_upload')
    op.drop_table('collaboration')

    # Remove the enums created as part of the upgrade above
    sa.Enum(name='assetgroupmajortype').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='codetypes').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='codedecisions').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='clientlevels').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='tokentypes').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
