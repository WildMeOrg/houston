version: "3.8"

services:

  db:
    image: postgres:10
    volumes:
      - db-pgdata-var:/var/lib/postgresql/data
      # DB initialization scripts
      - ./db/initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      WBIA_DB_NAME: "${WBIA_DB_NAME}"
      WBIA_DB_USER: "${WBIA_DB_USER}"
      WBIA_DB_PASSWORD: "${WBIA_DB_PASSWORD}"
      WILDBOOK_DB_NAME: "${WILDBOOK_DB_NAME}"
      WILDBOOK_DB_USER: "${WILDBOOK_DB_USER}"
      WILDBOOK_DB_PASSWORD: "${WILDBOOK_DB_PASSWORD}"
      HOUSTON_DB_NAME: "${HOUSTON_DB_NAME}"
      HOUSTON_DB_USER: "${HOUSTON_DB_USER}"
      HOUSTON_DB_PASSWORD: "${HOUSTON_DB_PASSWORD}"
    networks:
      - intranet

  redis:
    image: redis:latest
    volumes:
      - redis-var:/data
    networks:
      - intranet

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - pgadmin-var:/var/lib/pgadmin
    ports:
      - "8000:80"
    networks:
      - intranet
      - frontend

  gitlab:
    image: gitlab/gitlab-ce:13.9.3-ce.0
    volumes:
      - gitlab-var-config:/etc/gitlab
      - gitlab-var-logs:/var/log/gitlab
      - gitlab-var-data:/var/opt/gitlab
    networks:
      - intranet
    ports:
      # - "22:22"
      # - "80:80"
      # - "443:443"
      # FIXME: exposed for developers
      - "85:80"

  acm:
    # https://github.com/WildMeOrg/wildbook-ia
    image: wildme/wildbook-ia:nightly
    # FIXME: Adjust entrypoint to allow for additive command arguments
    command: [ "wait-for", "db:5432", "--", "python3.7", "-m", "wbia.dev", "--dbdir", "${WBIA_DB_DIR}", "--logdir", "/data/logs/", "--web", "--port", "5000", "--web-deterministic-ports", "--containerized", "--cpudark", "--production", "--db-uri", "${WBIA_DB_URI}" ]
    volumes:
      # FIXME: `PermissionError: [Errno 13] Permission denied: '/data/db/_ibsdb'`
      #        https://github.com/WildMeOrg/wildbook-ia/pull/184
      - acm-var:/data/db
    networks:
      - intranet
    environment:
      # FIXME: Run as root to fix the PermissionError in volumes
      EXEC_PRIVILEGED: 1
    ports:
      # FIXME: exposed for developer verification
      - "82:5000"

  edm:
    # See: https://github.com/WildMeOrg/Wildbook/tree/next-gen
    #  - git clone -b next-gen git@github.com:WildMeOrg/Wildbook.git && cd Wildbook
    #  - ./scripts/build.docker.sh
    image: wildme/edm:latest
    volumes:
      - edm-var:/data/wildbook_data_dir
    # depends_on:
    #   - db
    networks:
      - intranet
    ports:
      # FIXME: exposed for developer verification
      - "81:8080"
    environment:
      DB_USER: "${WILDBOOK_DB_USER}"
      DB_PASSWORD: "${WILDBOOK_DB_PASSWORD}"
      DB_CONNECTION_URL: "${WILDBOOK_DB_CONNECTION_URL}"
      # Admin user created on startup,
      # https://github.com/WildMeOrg/Wildbook/commit/6d65e70e43691f1b281bb76edf151e5c7cdb7403
      ADMIN_EMAIL: "${EDM_AUTHENTICATIONS_USERNAME__DEFAULT}"
      ADMIN_PASSWORD: "${EDM_AUTHENTICATIONS_PASSWORD__DEFAULT}"

  houston:
    # https://github.com/WildMeOrg/houston
    # image: wildme/houston:latest
    build:
      context: ../../
    command: [ "wait-for", "db:5432", "--", "wait-for", "edm:8080", "--", "invoke", "app.run", "--host", "0.0.0.0" ]
    networks:
      - intranet
      - frontend
    ports:
      # FIXME: exposed for developer verification
      - "83:5000"
    environment:
      FLASK_CONFIG: local
      FLASK_CONFIG_IMPORT: "docker_local_config.LocalConfig"
      SQLALCHEMY_DATABASE_URI: "${SQLALCHEMY_DATABASE_URI}"
      TEST_DATABASE_URI: "${TEST_DATABASE_URI}"
      EDM_AUTHENTICATIONS_URI__DEFAULT: "${EDM_AUTHENTICATIONS_URI__DEFAULT}"
      EDM_AUTHENTICATIONS_USERNAME__DEFAULT: "${EDM_AUTHENTICATIONS_USERNAME__DEFAULT}"
      EDM_AUTHENTICATIONS_PASSWORD__DEFAULT: "${EDM_AUTHENTICATIONS_PASSWORD__DEFAULT}"
      ACM_AUTHENTICATIONS_URI__DEFAULT: "${ACM_AUTHENTICATIONS_URI__DEFAULT}"
      REDIS_HOST: redis
      GITLAB_PROTO: "${GITLAB_PROTO}"
      GITLAB_HOST: "${GITLAB_HOST}"
      GITLAB_PORT: "${GITLAB_PORT}"
      GITLAB_ADMIN_PASSWORD: "${GITLAB_ADMIN_PASSWORD}"
      GITLAB_REMOTE_URI: "${GITLAB_REMOTE_URI}"
      GIT_PUBLIC_NAME: "${GIT_PUBLIC_NAME}"
      GIT_EMAIL: "${GIT_EMAIL}"
      GITLAB_NAMESPACE: "${GITLAB_NAMESPACE}"
    volumes:
      - houston-var:/data
      - ./houston/docker-entrypoint-init.d:/docker-entrypoint-init.d
      - ./houston/docker-entrypoint-always-init.d:/docker-entrypoint-always-init.d
      # FIXME: pull in development code while working on bringing up the container
      - ../../:/code
      # FIXME: Can we define a better mountpoint for this file? Maybe /config.py?
      - ./houston/local_config.py:/code/docker_local_config.py

  dev-frontend:
    # this component is intended to only be used in development
    image: node:latest
    working_dir: /code
    entrypoint: "/docker-entrypoint.sh"
    networks:
      - intranet
    environment:
      HOST: "0.0.0.0"
      # See port served by 'www' component (i.e. the reverse proxy)
      PORT: "84"
    volumes:
      - ./dev-frontend/docker-entrypoint.sh:/docker-entrypoint.sh
      - ../../_frontend:/code

  www:
    image: nginx:latest
    networks:
      - intranet
      - frontend
    ports:
      - "84:80"
    volumes:
      - ./www/codex.conf:/etc/nginx/conf.d/default.conf

networks:
  intranet:
  frontend:

volumes:
  db-pgdata-var:
  edm-var:
  redis-var:
  pgadmin-var:
  acm-var:
  houston-var:
  gitlab-var-config:
  gitlab-var-logs:
  gitlab-var-data:
